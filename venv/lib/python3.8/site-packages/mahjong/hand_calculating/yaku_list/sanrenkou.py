# -*- coding: utf-8 -*-
from mahjong.hand_calculating.yaku import Yaku
from mahjong.utils import is_chi, is_pon, is_sou, is_pin, is_man


class SanRenkou(Yaku):

    def __init__(self, yaku_id=None):
        super(SanRenkou, self).__init__(yaku_id)

    def set_attributes(self):
        self.tenhou_id = 57

        self.name = 'San Renkou'
        self.english = 'Tripple Seaquenced Triplets'
        self.japanese = '三連刻'

        self.han_open = 2
        self.han_closed = 2

        self.is_yakuman = False

    def is_condition_met(self, hand, *args):

        pon_sets = [x for x in hand if is_pon(x)]

        if len(pon_sets) >= 3:
            sou_sets = []
            pin_sets = []
            for item in pon_sets:
                if is_sou(item[0]):
                    sou_sets.append(item)
                elif is_pin(item[0]):
                    pin_sets.append(item)

            if len(sou_sets) == 4 or len(pin_sets) == 4:
                seq = [pon_sets[count + 1][0] - pon_sets[count][0] for count in range(3)]
                return seq.count(1) == 2 and seq[1] == 1

            if len(sou_sets) == 3:
                seq = [sou_sets[count + 1][0] - sou_sets[count][0] for count in range(2)]
                return seq.count(1) == 2

            if len(pin_sets) == 3:
                seq = [pin_sets[count + 1][0] - pin_sets[count][0] for count in range(2)]
                return seq.count(1) == 2
        else:
            return False
